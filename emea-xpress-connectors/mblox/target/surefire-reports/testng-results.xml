<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="11" failed="5" total="21" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="1268" started-at="2015-10-16T13:20:11Z" finished-at="2015-10-16T13:20:12Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="1268" started-at="2015-10-16T13:20:11Z" finished-at="2015-10-16T13:20:12Z">
      <class name="com.fisglobal.xpress.emea.sms.NotificationServiceTest">
        <test-method status="SKIP" signature="SMSPriorityValidatorTest()[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="SMSPriorityValidatorTest" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SMSPriorityValidatorTest -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fisglobal.xpress.emea.sms.NotificationServiceTest.SMSPriorityValidatorTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fisglobal.xpress.emea.sms.NotificationServiceTest.SMSRecipientNumberValidatorTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="SMSRecipientNumberValidatorTest()[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="SMSRecipientNumberValidatorTest" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SMSRecipientNumberValidatorTest -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="SMSSenderIDValidatorTest()[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="SMSSenderIDValidatorTest" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SMSSenderIDValidatorTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fisglobal.xpress.emea.sms.NotificationServiceTest.SMSSenderIDValidatorTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fisglobal.xpress.emea.sms.NotificationServiceTest.SMSTextLengthValidatorTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="SMSTextValidatorTest()[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="SMSTextValidatorTest" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SMSTextValidatorTest -->
        <test-method status="SKIP" signature="SMSTextLengthValidatorTest()[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="SMSTextLengthValidatorTest" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SMSTextLengthValidatorTest -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="ValidSMSValidatorTest()[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="ValidSMSValidatorTest" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidSMSValidatorTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fisglobal.xpress.emea.sms.NotificationServiceTest.ValidSMSValidatorTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fisglobal.xpress.emea.sms.NotificationServiceTest.SMSTextValidatorTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fisglobal.xpress.emea.sms.NotificationServiceTest.ValidateSMSBlackOutTimeDayOverLapTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="ValidateSMSBlackOutTimeDayOverLapTest()[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="ValidateSMSBlackOutTimeDayOverLapTest" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateSMSBlackOutTimeDayOverLapTest -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="ValidateSMSBlackOutTimeTest()[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="ValidateSMSBlackOutTimeTest" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateSMSBlackOutTimeTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fisglobal.xpress.emea.sms.NotificationServiceTest.ValidateSMSBlackOutTimeTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fisglobal.xpress.emea.sms.NotificationServiceTest.ValidateSMSGlobalBlackOutTimeTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="ValidateSMSGlobalBlackOutTimeTest()[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="ValidateSMSGlobalBlackOutTimeTest" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateSMSGlobalBlackOutTimeTest -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.fisglobal.xpress.emea.sms.NotificationServiceTest@7791a895]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.fisglobal.xpress.emea.sms.NotificationServiceTest -->
      <class name="com.fisglobal.xpress.emea.sms.mblox.messaging.connector.BaseMbloxConnectorTest">
        <test-method status="PASS" signature="sendNotificationRequest_should_send_string_request_to_given_URI()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.messaging.connector.BaseMbloxConnectorTest@5c5a1b69]" name="sendNotificationRequest_should_send_string_request_to_given_URI" duration-ms="21" started-at="2015-10-16T15:20:11Z" finished-at="2015-10-16T15:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendNotificationRequest_should_send_string_request_to_given_URI -->
        <test-method status="PASS" signature="testSendNotificationRequestURINotificationRequestDetails()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.messaging.connector.BaseMbloxConnectorTest@5c5a1b69]" name="testSendNotificationRequestURINotificationRequestDetails" duration-ms="0" started-at="2015-10-16T15:20:11Z" finished-at="2015-10-16T15:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendNotificationRequestURINotificationRequestDetails -->
      </class> <!-- com.fisglobal.xpress.emea.sms.mblox.messaging.connector.BaseMbloxConnectorTest -->
      <class name="com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestMarshallerTest">
        <test-method status="FAIL" signature="marshallToString_should_marshall_using_notification_request_details()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestMarshallerTest@23e028a9]" name="marshallToString_should_marshall_using_notification_request_details" duration-ms="17" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[profileId is blank]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: profileId is blank
	at com.fisglobal.xpress.emea.mblox.NotificationRequestBuilder.withProfileId(NotificationRequestBuilder.java:58)
	at com.fisglobal.xpress.emea.mblox.NotificationRequestMarshaller.marshallToString(NotificationRequestMarshaller.java:34)
	at com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestMarshallerTest.marshallToString_should_marshall_using_notification_request_details(NotificationRequestMarshallerTest.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- marshallToString_should_marshall_using_notification_request_details -->
      </class> <!-- com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestMarshallerTest -->
      <class name="com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestResultMarshallerTest">
        <test-method status="PASS" signature="unmarshallString_should_unmarshall_default_ok_result()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestResultMarshallerTest@5bc79255]" name="unmarshallString_should_unmarshall_default_ok_result" duration-ms="94" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unmarshallString_should_unmarshall_default_ok_result -->
        <test-method status="FAIL" signature="unmarshallString_should_unmarshall_formatting_error_result()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestResultMarshallerTest@5bc79255]" name="unmarshallString_should_unmarshall_formatting_error_result" duration-ms="9" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.fisglobal.xpress.emea.mblox.NotificationRequestResultDetails.equals(NotificationRequestResultDetails.java:117)
	at org.testng.Assert.assertEquals(Assert.java:119)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestResultMarshallerTest.unmarshallString_should_unmarshall_formatting_error_result(NotificationRequestResultMarshallerTest.java:119)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unmarshallString_should_unmarshall_formatting_error_result -->
        <test-method status="FAIL" signature="unmarshallString_should_unmarshall_malformed_error_result()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestResultMarshallerTest@5bc79255]" name="unmarshallString_should_unmarshall_malformed_error_result" duration-ms="5" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.fisglobal.xpress.emea.mblox.NotificationRequestResultDetails.equals(NotificationRequestResultDetails.java:133)
	at org.testng.Assert.assertEquals(Assert.java:119)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestResultMarshallerTest.unmarshallString_should_unmarshall_malformed_error_result(NotificationRequestResultMarshallerTest.java:171)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unmarshallString_should_unmarshall_malformed_error_result -->
        <test-method status="FAIL" signature="unmarshallString_should_unmarshall_retry()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestResultMarshallerTest@5bc79255]" name="unmarshallString_should_unmarshall_retry" duration-ms="4" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.fisglobal.xpress.emea.mblox.NotificationRequestResultDetails.equals(NotificationRequestResultDetails.java:117)
	at org.testng.Assert.assertEquals(Assert.java:119)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestResultMarshallerTest.unmarshallString_should_unmarshall_retry(NotificationRequestResultMarshallerTest.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unmarshallString_should_unmarshall_retry -->
      </class> <!-- com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestResultMarshallerTest -->
      <class name="com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestBuilderTest">
        <test-method status="PASS" signature="prepareSimpleTemplate()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestBuilderTest@35d176f7]" name="prepareSimpleTemplate" is-config="true" duration-ms="218" started-at="2015-10-16T15:20:11Z" finished-at="2015-10-16T15:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepareSimpleTemplate -->
        <test-method status="PASS" signature="prepareSimpleTemplate()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestMarshallerTest@23e028a9]" name="prepareSimpleTemplate" is-config="true" duration-ms="1" started-at="2015-10-16T15:20:11Z" finished-at="2015-10-16T15:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepareSimpleTemplate -->
        <test-method status="FAIL" signature="asString_should_return_string_representation_of_request()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestBuilderTest@35d176f7]" name="asString_should_return_string_representation_of_request" duration-ms="23" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [abcdef] but found [abc<![CDATA[d]]]]><![CDATA[>ef]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [abcdef] but found [abc<![CDATA[d]]]]><![CDATA[>ef]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestBuilderTest.asString_should_return_string_representation_of_request(NotificationRequestBuilderTest.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asString_should_return_string_representation_of_request -->
      </class> <!-- com.fisglobal.xpress.emea.sms.mblox.notifications.NotificationRequestBuilderTest -->
      <class name="com.fisglobal.xpress.emea.sms.mblox.messaging.connector.http.MbloxHttpClientTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.messaging.connector.http.MbloxHttpClientTest@3701eaf6]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:11Z" finished-at="2015-10-16T15:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="FAIL" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.messaging.connector.http.MbloxHttpClientTest@3701eaf6]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:11Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-10-16T15:20:11Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Failed to load ApplicationContext]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:122)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:312)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextPrepareTestInstance(AbstractTestNGSpringContextTests.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'baseMbloxConnector' defined in class path resource [testContext.xml]: Cannot resolve reference to bean 'mbloxHttpClient' while setting bean property 'mbloxClient'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mbloxHttpClient' defined in class path resource [testContext.xml]: Cannot resolve reference to bean 'httpProxyConfig' while setting bean property 'httpProxyConfig'; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.fisglobal.xpress.emea.sms.mblox.messaging.connector.http.HttpProxyConfig] for bean with name 'httpProxyConfig' defined in class path resource [testContext.xml]; nested exception is java.lang.ClassNotFoundException: com.fisglobal.xpress.emea.sms.mblox.messaging.connector.http.HttpProxyConfig
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:326)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1158)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:628)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:120)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:100)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:248)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:64)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:91)
	... 39 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mbloxHttpClient' defined in class path resource [testContext.xml]: Cannot resolve reference to bean 'httpProxyConfig' while setting bean property 'httpProxyConfig'; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.fisglobal.xpress.emea.sms.mblox.messaging.connector.http.HttpProxyConfig] for bean with name 'httpProxyConfig' defined in class path resource [testContext.xml]; nested exception is java.lang.ClassNotFoundException: com.fisglobal.xpress.emea.sms.mblox.messaging.connector.http.HttpProxyConfig
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:326)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1158)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:320)
	... 57 more
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.fisglobal.xpress.emea.sms.mblox.messaging.connector.http.HttpProxyConfig] for bean with name 'httpProxyConfig' defined in class path resource [testContext.xml]; nested exception is java.lang.ClassNotFoundException: com.fisglobal.xpress.emea.sms.mblox.messaging.connector.http.HttpProxyConfig
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1281)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:435)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:320)
	... 67 more
Caused by: java.lang.ClassNotFoundException: com.fisglobal.xpress.emea.sms.mblox.messaging.connector.http.HttpProxyConfig
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:257)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:416)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1273)
	... 73 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.messaging.connector.http.MbloxHttpClientTest@3701eaf6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="3" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fisglobal.xpress.emea.sms.mblox.messaging.connector.http.MbloxHttpClientTest.testSendNotificationRequestString3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="validateConfig()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.messaging.connector.http.MbloxHttpClientTest@3701eaf6]" name="validateConfig" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateConfig -->
        <test-method status="SKIP" signature="testSendNotificationRequestString3()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.messaging.connector.http.MbloxHttpClientTest@3701eaf6]" name="testSendNotificationRequestString3" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSendNotificationRequestString3 -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.messaging.connector.http.MbloxHttpClientTest@3701eaf6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.messaging.connector.http.MbloxHttpClientTest@3701eaf6]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.fisglobal.xpress.emea.sms.mblox.messaging.connector.http.MbloxHttpClientTest -->
      <class name="com.fisglobal.xpress.emea.sms.mblox.messaging.MbloxMessagingTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.messaging.MbloxMessagingTest@2758fe70]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="sendNotification()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.messaging.MbloxMessagingTest@2758fe70]" name="sendNotification" duration-ms="1" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendNotification -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.messaging.MbloxMessagingTest@2758fe70]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.messaging.MbloxMessagingTest@2758fe70]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="validateConfig()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.messaging.MbloxMessagingTest@2758fe70]" name="validateConfig" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateConfig -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.messaging.MbloxMessagingTest@2758fe70]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fisglobal.xpress.emea.sms.mblox.messaging.MbloxMessagingTest.sendNotification()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.messaging.MbloxMessagingTest@2758fe70]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2015-10-16T15:20:12Z" finished-at="2015-10-16T15:20:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.fisglobal.xpress.emea.sms.mblox.messaging.MbloxMessagingTest -->
      <class name="com.fisglobal.xpress.emea.sms.mblox.notifications.DefaultNotificationRequestTemplateTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.notifications.DefaultNotificationRequestTemplateTest@551aa95a]" name="test1" duration-ms="22" started-at="2015-10-16T15:20:11Z" finished-at="2015-10-16T15:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:com.fisglobal.xpress.emea.sms.mblox.notifications.DefaultNotificationRequestTemplateTest@551aa95a]" name="test2" duration-ms="1" started-at="2015-10-16T15:20:11Z" finished-at="2015-10-16T15:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
      </class> <!-- com.fisglobal.xpress.emea.sms.mblox.notifications.DefaultNotificationRequestTemplateTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
