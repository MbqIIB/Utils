package com.fisglobal.emea.xpress.service.errorhandlers;

import com.fisglobal.emea.xpress.service.ServiceContext;
import com.fisglobal.emea.xpress.service.errorhandlers.exceptions.TooManyRecordsFoundException;
import com.fnf.jef.boc.RequestMessage;
import com.fnf.jef.boc.ResponseMessage;
import com.fnis.ifx.xbo.v1_1.Factory;
import com.fnis.ifx.xbo.v1_1.base.Status;
import com.fnis.xes.services.template.XBOStatus;
import java.util.List;
import java.util.Map;

/**
 *
 * @author satheesh
 */
public class TooManyRecordsFoundExceptionHandler extends DefaultExceptionHandler {

   private Long additionalStatusCode = 100L;
   private String additionalSeverity = "Error";

   @Override
   public boolean handle(Throwable throwable, Map<String, Object> exceptionProcessingContext, RequestMessage requestMessage, ResponseMessage response, List<ServiceContext> serviceContextList) {

      if (throwable instanceof TooManyRecordsFoundException) {
         TooManyRecordsFoundException e = (TooManyRecordsFoundException) throwable;
         addAdditionalStatus(serviceContextList, additionalSeverity, additionalStatusCode, e.getMessage());
         return isContinueProcessing();
      }
      return true;
   }

   private void addAdditionalStatus(List<ServiceContext> serviceContextList, String severity, Long statusCode, String statusDesc) {
      Status additionalStatus = (Status) Factory.create(Status.class);
      XBOStatus status = createXBOStatus(serviceContextList);
      addStatus(status, serviceContextList.get(0).getComponentContext());

      additionalStatus.setSeverity(severity);
      additionalStatus.setStatusCode(statusCode);
      additionalStatus.setStatusDesc(statusDesc);

      status.setSeverity(getDefaultSeverity());
      status.setStatusCode(getDefaultStatusCode());
      status.setHostAppId(getDefaultSpName());
      status.setStatus(additionalStatus);
   }

   /**
    * @return the additionalStatusCode
    */
   public Long getAdditionalStatusCode() {
      return additionalStatusCode;
   }

   /**
    * @param additionalStatusCode the additionalStatusCode to set
    */
   public void setAdditionalStatusCode(Long additionalStatusCode) {
      this.additionalStatusCode = additionalStatusCode;
   }

   /**
    * @return the additionalSeverity
    */
   public String getAdditionalSeverity() {
      return additionalSeverity;
   }

   /**
    * @param additionalSeverity the additionalSeverity to set
    */
   public void setAdditionalSeverity(String additionalSeverity) {
      this.additionalSeverity = additionalSeverity;
   }
}
